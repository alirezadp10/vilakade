version: '3'
services:
    nginx:
        image: nginx:latest
        ports:
            - '${FORWARD_APP_PORT}:80'
            - 443:443
        volumes:
            - ./backend:/var/www/backend
            - ./frontend:/var/www/frontend
            - ./nginx/conf.d/:/etc/nginx/conf.d/
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        networks:
            - vilakade
        working_dir: /var/www/
    certbot:
        image: certbot/certbot:latest
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
    backend:
        image: backend/vilakade
        build:
            context: ./backend
            dockerfile: Dockerfile
        volumes:
            - ./backend:/var/www/backend
            - ./backend/docker/supervisord.conf:/etc/supervisor/conf.d/app.conf
            - ./backend/docker/php.ini:/usr/local/etc/php/conf.d/app.ini
            - ./backend/docker/start-container:/usr/local/bin/start-container
        networks:
            - vilakade
        working_dir: /var/www/backend
    frontend:
        image: frontend/vilakade
        build:
            context: ./frontend
            dockerfile: Dockerfile
        restart: always
        volumes:
            - './frontend:/usr/src/app'
        healthcheck:
            test: ["CMD", "curl", "-f", "http://127.0.0.1:${FORWARD_APP_PORT}"]
            interval: 1m30s
            timeout: 10s
            retries: 3
        env_file:
            - ./frontend/.env
        networks:
            - vilakade
        working_dir: /usr/src/app
    mysql:
        image: 'mysql:8.0'
        ports:
            - '${FORWARD_DB_PORT}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'vilakademysql:/var/lib/mysql'
        networks:
            - vilakade
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT}:6379'
        volumes:
            - 'vilakaderedis:/data'
        networks:
            - vilakade
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
networks:
    vilakade:
        driver: bridge
volumes:
    vilakademysql:
        driver: local
    vilakaderedis:
        driver: local
